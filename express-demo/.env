MONGO_URI=mongodb+srv://tobechukwu:11259375@timefy.fcfiejm.mongodb.net/?retryWrites=true&w=majority&appName=Timefy
JWT_SECRET=573eb5c6a2baa869805ae4f8afe7792ca395db19e3d6c25638aecb6feb85aa8207f9799d3a414f7b655a72e017dfffac668129839ad5e80da681f2c3fd43a5aa
PORT=3000



# // setting up express fondation
# const express = require('express');
# const { MongoClient, ServerApiVersion } = require("mongodb");
# require('dotenv').config();
# const PORT = process.env.PORT || 4000;

# // creating an express app instance
# const app = express();

# // middleware for parsing reuest bodies
# app.use(express.json());

# // defining a simple route
# app.get('/', (req, res) => {
#     res.send('Hello World');
# })

# const uri = process.env.MONGO_URI;
# // Create a MongoClient with a MongoClientOptions object to set the Stable API version
# const client = new MongoClient(uri, {
#     serverApi: {
#         version: ServerApiVersion.v1,
#         strict: true,
#         deprecationErrors: true,
#     }
# }
# );
# async function run() {
#     try {
#         // Connect the client to the server (optional starting in v4.7)
#         await client.connect();
#         // Send a ping to confirm a successful connection
#         await client.db("admin").command({ ping: 1 });
#         console.log("Pinged your deployment. You successfully connected to MongoDB!");
#     } finally {
#         // Ensures that the client will close when you finish/error
#         await client.close();
#     }
# }
# run().catch(console.dir);

# // starting the server
# app.listen(PORT, () => {
#     console.log(`Server is running on port ${PORT}`);
# })